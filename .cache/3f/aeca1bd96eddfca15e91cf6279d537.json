{"id":"node_modules/fast-xml-parser/src/parser.js","dependencies":[{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\package.json","includedInParent":true,"mtime":1602864672900},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\.babelrc","includedInParent":true,"mtime":1602860561937},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\package.json","includedInParent":true,"mtime":1602864668419},{"name":"./node2json","loc":{"line":3,"column":27},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\node2json.js"},{"name":"./xmlstr2xmlnode","loc":{"line":5,"column":26},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\xmlstr2xmlnode.js"},{"name":"./util","loc":{"line":6,"column":29},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\util.js"},{"name":"./validator","loc":{"line":7,"column":26},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\validator.js"},{"name":"../src/nimndata","loc":{"line":23,"column":32},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\nimndata.js"},{"name":"./node2json_str","loc":{"line":26,"column":38},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\node2json_str.js"},{"name":"./json2xml","loc":{"line":28,"column":28},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\parser.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\json2xml.js"}],"generated":{"js":"'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/fast-xml-parser/src/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"node_modules/fast-xml-parser/src/parser.js":"'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}"},"lineCount":67}},"error":null,"hash":"e12cccc532dd957e55e9c594a151e3f8","cacheData":{"env":{}}}