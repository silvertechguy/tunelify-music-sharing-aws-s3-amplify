{"id":"node_modules/fast-xml-parser/src/node2json.js","dependencies":[{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\package.json","includedInParent":true,"mtime":1602864672900},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\.babelrc","includedInParent":true,"mtime":1602860561937},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\package.json","includedInParent":true,"mtime":1602864668419},{"name":"./util","loc":{"line":3,"column":21},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\node2json.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\util.js"}],"generated":{"js":"'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options) {\n  const jObj = {};\n\n  //when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    //otherwise create a textnode if node has some text\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        if(options.arrayMode === \"strict\"){\n          jObj[options.textNodeName] = [ node.val ];\n        }else{\n          jObj[options.textNodeName] = node.val;\n        }\n      }\n    }\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj[tagname] = [];\n      for (var tag in node.child[tagname]) {\n        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));\n      }\n    } else {\n      if(options.arrayMode === true){\n        const result = convertToJson(node.child[tagname][0], options)\n        if(typeof result === 'object')\n          jObj[tagname] = [ result ];\n        else\n          jObj[tagname] = result;\n      }else if(options.arrayMode === \"strict\"){\n        jObj[tagname] = [convertToJson(node.child[tagname][0], options) ];\n      }else{\n        jObj[tagname] = convertToJson(node.child[tagname][0], options);\n      }\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/fast-xml-parser/src/node2json.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"node_modules/fast-xml-parser/src/node2json.js":"'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options) {\n  const jObj = {};\n\n  //when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    //otherwise create a textnode if node has some text\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        if(options.arrayMode === \"strict\"){\n          jObj[options.textNodeName] = [ node.val ];\n        }else{\n          jObj[options.textNodeName] = node.val;\n        }\n      }\n    }\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj[tagname] = [];\n      for (var tag in node.child[tagname]) {\n        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));\n      }\n    } else {\n      if(options.arrayMode === true){\n        const result = convertToJson(node.child[tagname][0], options)\n        if(typeof result === 'object')\n          jObj[tagname] = [ result ];\n        else\n          jObj[tagname] = result;\n      }else if(options.arrayMode === \"strict\"){\n        jObj[tagname] = [convertToJson(node.child[tagname][0], options) ];\n      }else{\n        jObj[tagname] = convertToJson(node.child[tagname][0], options);\n      }\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n"},"lineCount":54}},"error":null,"hash":"99145790e022aef61e49cfd6f9b70ccd","cacheData":{"env":{}}}