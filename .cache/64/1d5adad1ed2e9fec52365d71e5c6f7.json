{"id":"RqZ4","dependencies":[{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\package.json","includedInParent":true,"mtime":1602864672900},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\.babelrc","includedInParent":true,"mtime":1602860561937},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\eventstream-marshaller\\package.json","includedInParent":true,"mtime":1602864669401},{"name":"@aws-sdk/util-hex-encoding","loc":{"line":1,"column":22},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\eventstream-marshaller\\dist\\es\\Int64.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\util-hex-encoding\\dist\\es\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Int64=void 0;var t=require(\"@aws-sdk/util-hex-encoding\"),r=function(){function r(t){if(this.bytes=t,8!==t.byteLength)throw new Error(\"Int64 buffers must be exactly 8 bytes\")}return r.fromNumber=function(t){if(t>0x8000000000000000||t<-0x8000000000000000)throw new Error(t+\" is too large (or, if negative, too small) to represent as an Int64\");for(var n=new Uint8Array(8),o=7,i=Math.abs(Math.round(t));o>-1&&i>0;o--,i/=256)n[o]=i;return t<0&&e(n),new r(n)},r.prototype.valueOf=function(){var r=this.bytes.slice(0),n=128&r[0];return n&&e(r),parseInt((0,t.toHex)(r),16)*(n?-1:1)},r.prototype.toString=function(){return String(this.valueOf())},r}();function e(t){for(var r=0;r<8;r++)t[r]^=255;for(r=7;r>-1&&(t[r]++,0===t[r]);r--);}exports.Int64=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":87}},{"source":"../../src/Int64.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../src/Int64.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../src/Int64.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":95}},{"source":"../../src/Int64.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":103}},{"source":"../../src/Int64.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":133}},{"source":"../../src/Int64.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":135}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":1,"column":146}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":1,"column":155}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":1,"column":157}},{"source":"../../src/Int64.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":1,"column":160}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":1,"column":163}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":1,"column":168}},{"source":"../../src/Int64.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":1,"column":174}},{"source":"../../src/Int64.ts","name":null,"original":{"line":15,"column":29},"generated":{"line":1,"column":176}},{"source":"../../src/Int64.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":1,"column":180}},{"source":"../../src/Int64.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":182}},{"source":"../../src/Int64.ts","name":null,"original":{"line":16,"column":12},"generated":{"line":1,"column":193}},{"source":"../../src/Int64.ts","name":null,"original":{"line":16,"column":12},"generated":{"line":1,"column":199}},{"source":"../../src/Int64.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":203}},{"source":"../../src/Int64.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":1,"column":209}},{"source":"../../src/Int64.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":1,"column":250}},{"source":"../../src/Int64.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":257}},{"source":"../../src/Int64.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":259}},{"source":"../../src/Int64.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":1,"column":270}},{"source":"../../src/Int64.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":1,"column":279}},{"source":"../../src/Int64.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":1,"column":282}},{"source":"../../src/Int64.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":1,"column":285}},{"source":"../../src/Int64.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":1,"column":287}},{"source":"../../src/Int64.ts","name":null,"original":{"line":21,"column":40},"generated":{"line":1,"column":307}},{"source":"../../src/Int64.ts","name":null,"original":{"line":21,"column":50},"generated":{"line":1,"column":310}},{"source":"../../src/Int64.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":329}},{"source":"../../src/Int64.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":335}},{"source":"../../src/Int64.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":1,"column":339}},{"source":"../../src/Int64.ts","name":null,"original":{"line":22,"column":25},"generated":{"line":1,"column":345}},{"source":"../../src/Int64.ts","name":null,"original":{"line":22,"column":31},"generated":{"line":1,"column":347}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":1,"column":418}},{"source":"../../src/Int64.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":1,"column":422}},{"source":"../../src/Int64.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":1,"column":426}},{"source":"../../src/Int64.ts","name":null,"original":{"line":25,"column":18},"generated":{"line":1,"column":428}},{"source":"../../src/Int64.ts","name":null,"original":{"line":25,"column":22},"generated":{"line":1,"column":432}},{"source":"../../src/Int64.ts","name":null,"original":{"line":25,"column":33},"generated":{"line":1,"column":443}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":1,"column":446}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":1,"column":448}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":1,"column":450}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":1,"column":452}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":37},"generated":{"line":1,"column":457}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":41},"generated":{"line":1,"column":461}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":46},"generated":{"line":1,"column":466}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":52},"generated":{"line":1,"column":472}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":62},"generated":{"line":1,"column":476}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":67},"generated":{"line":1,"column":479}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":72},"generated":{"line":1,"column":482}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":84},"generated":{"line":1,"column":484}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":87},"generated":{"line":1,"column":486}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":92},"generated":{"line":1,"column":490}},{"source":"../../src/Int64.ts","name":null,"original":{"line":26,"column":105},"generated":{"line":1,"column":493}},{"source":"../../src/Int64.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":497}},{"source":"../../src/Int64.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":1,"column":499}},{"source":"../../src/Int64.ts","name":null,"original":{"line":27,"column":17},"generated":{"line":1,"column":502}},{"source":"../../src/Int64.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":1,"column":504}},{"source":"../../src/Int64.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":1,"column":511}},{"source":"../../src/Int64.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":1,"column":513}},{"source":"../../src/Int64.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":516}},{"source":"../../src/Int64.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":518}},{"source":"../../src/Int64.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":1,"column":521}},{"source":"../../src/Int64.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":1,"column":525}},{"source":"../../src/Int64.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":1,"column":527}},{"source":"../../src/Int64.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":531}},{"source":"../../src/Int64.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":533}},{"source":"../../src/Int64.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":543}},{"source":"../../src/Int64.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":551}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":562}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":566}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":1,"column":568}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":1,"column":573}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":1,"column":579}},{"source":"../../src/Int64.ts","name":null,"original":{"line":41,"column":35},"generated":{"line":1,"column":585}},{"source":"../../src/Int64.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":1,"column":588}},{"source":"../../src/Int64.ts","name":null,"original":{"line":42,"column":32},"generated":{"line":1,"column":590}},{"source":"../../src/Int64.ts","name":null,"original":{"line":42,"column":21},"generated":{"line":1,"column":594}},{"source":"../../src/Int64.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":1,"column":596}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":11},"generated":{"line":1,"column":599}},{"source":"../../src/Int64.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":1,"column":606}},{"source":"../../src/Int64.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":1,"column":609}},{"source":"../../src/Int64.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":1,"column":611}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":11},"generated":{"line":1,"column":614}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":20},"generated":{"line":1,"column":624}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":626}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":628}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":635}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":34},"generated":{"line":1,"column":638}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":41},"generated":{"line":1,"column":643}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":53},"generated":{"line":1,"column":646}},{"source":"../../src/Int64.ts","name":null,"original":{"line":47,"column":57},"generated":{"line":1,"column":648}},{"source":"../../src/Int64.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":1,"column":652}},{"source":"../../src/Int64.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":1,"column":654}},{"source":"../../src/Int64.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":1,"column":664}},{"source":"../../src/Int64.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":1,"column":673}},{"source":"../../src/Int64.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":1,"column":684}},{"source":"../../src/Int64.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":1,"column":691}},{"source":"../../src/Int64.ts","name":null,"original":{"line":51,"column":18},"generated":{"line":1,"column":698}},{"source":"../../src/Int64.ts","name":null,"original":{"line":51,"column":23},"generated":{"line":1,"column":703}},{"source":"../../src/Int64.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":1,"column":715}},{"source":"../../src/Int64.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":717}},{"source":"../../src/Int64.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":1,"column":720}},{"source":"../../src/Int64.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":729}},{"source":"../../src/Int64.ts","name":null,"original":{"line":55,"column":16},"generated":{"line":1,"column":731}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":1,"column":734}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":1,"column":738}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":1,"column":742}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":1,"column":744}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":18},"generated":{"line":1,"column":746}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":22},"generated":{"line":1,"column":748}},{"source":"../../src/Int64.ts","name":null,"original":{"line":56,"column":25},"generated":{"line":1,"column":750}},{"source":"../../src/Int64.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":1,"column":754}},{"source":"../../src/Int64.ts","name":null,"original":{"line":57,"column":10},"generated":{"line":1,"column":756}},{"source":"../../src/Int64.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":1,"column":760}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":7},"generated":{"line":1,"column":764}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":11},"generated":{"line":1,"column":768}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":15},"generated":{"line":1,"column":770}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":18},"generated":{"line":1,"column":772}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":23},"generated":{"line":1,"column":775}},{"source":"../../src/Int64.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":1,"column":779}},{"source":"../../src/Int64.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":781}},{"source":"../../src/Int64.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":1,"column":786}},{"source":"../../src/Int64.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":790}},{"source":"../../src/Int64.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":1,"column":792}},{"source":"../../src/Int64.ts","name":null,"original":{"line":60,"column":26},"generated":{"line":1,"column":796}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":802}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":810}},{"source":"../../src/Int64.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":1,"column":816}}],"sources":{"../../src/Int64.ts":"import { Int64 as IInt64 } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nexport interface Int64 extends IInt64 {}\n\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n */\nexport class Int64 {\n  constructor(readonly bytes: Uint8Array) {\n    if (bytes.byteLength !== 8) {\n      throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n    }\n  }\n\n  static fromNumber(number: number): Int64 {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n      throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n    }\n\n    const bytes = new Uint8Array(8);\n    for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n      bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n      negate(bytes);\n    }\n\n    return new Int64(bytes);\n  }\n\n  /**\n   * Called implicitly by infix arithmetic operators.\n   */\n  valueOf(): number {\n    const bytes = this.bytes.slice(0);\n    const negative = bytes[0] & 0b10000000;\n    if (negative) {\n      negate(bytes);\n    }\n\n    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n  }\n\n  toString() {\n    return String(this.valueOf());\n  }\n}\n\nfunction negate(bytes: Uint8Array): void {\n  for (let i = 0; i < 8; i++) {\n    bytes[i] ^= 0xff;\n  }\n\n  for (let i = 7; i > -1; i--) {\n    bytes[i]++;\n    if (bytes[i] !== 0) break;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"cf227958b638b4ee03d36e3bb3d7beb9","cacheData":{"env":{}}}