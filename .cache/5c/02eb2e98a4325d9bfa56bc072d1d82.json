{"id":"node_modules/fast-xml-parser/src/nimndata.js","dependencies":[{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\package.json","includedInParent":true,"mtime":1602864672900},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\.babelrc","includedInParent":true,"mtime":1602860561937},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\package.json","includedInParent":true,"mtime":1602864668419},{"name":"./xmlstr2xmlnode","loc":{"line":136,"column":20},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\nimndata.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\xmlstr2xmlnode.js"},{"name":"./util","loc":{"line":137,"column":29},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\nimndata.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\fast-xml-parser\\src\\util.js"}],"generated":{"js":"'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/fast-xml-parser/src/nimndata.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}}],"sources":{"node_modules/fast-xml-parser/src/nimndata.js":"'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n"},"lineCount":145}},"error":null,"hash":"5b046f449c8c8bb205a3441058cc08d8","cacheData":{"env":{}}}