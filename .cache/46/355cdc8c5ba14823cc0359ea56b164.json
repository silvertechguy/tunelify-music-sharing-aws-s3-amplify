{"id":"node_modules/@aws-sdk/middleware-retry/dist/es/delayDecider.js","dependencies":[{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\package.json","includedInParent":true,"mtime":1602864672900},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\.babelrc","includedInParent":true,"mtime":1602860561937},{"name":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\middleware-retry\\package.json","includedInParent":true,"mtime":1602864669444},{"name":"./constants","loc":{"line":1,"column":36},"parent":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\middleware-retry\\dist\\es\\delayDecider.js","resolved":"C:\\Users\\silve\\Downloads\\s3-demo\\node_modules\\@aws-sdk\\middleware-retry\\dist\\es\\constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultDelayDecider = void 0;\n\nvar _constants = require(\"./constants\");\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nvar defaultDelayDecider = function (delayBase, attempts) {\n  return Math.floor(Math.min(_constants.MAXIMUM_RETRY_DELAY, Math.random() * Math.pow(2, attempts) * delayBase));\n};\n\nexports.defaultDelayDecider = defaultDelayDecider;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/delayDecider.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":13,"column":0}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":13,"column":4}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":32},"generated":{"line":13,"column":23}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":35},"generated":{"line":13,"column":26}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":36},"generated":{"line":13,"column":36}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":35},"generated":{"line":13,"column":45}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":55},"generated":{"line":13,"column":47}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":35},"generated":{"line":13,"column":55}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":71},"generated":{"line":13,"column":57}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":0}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":9}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":14,"column":13}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":14,"column":14}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":19}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":20}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":17},"generated":{"line":14,"column":24}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":14,"column":25}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":28}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":22},"generated":{"line":14,"column":29}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":59}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":14,"column":61}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":47},"generated":{"line":14,"column":65}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":48},"generated":{"line":14,"column":66}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":14,"column":72}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":77}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":81}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":82}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":85}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":86}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":87}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":64},"generated":{"line":14,"column":89}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":14,"column":97}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":14,"column":98}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":75},"generated":{"line":14,"column":101}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":110}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":111}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":112}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":7,"column":86},"generated":{"line":15,"column":0}},{"source":"../../src/delayDecider.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":15,"column":1}}],"sources":{"../../src/delayDecider.ts":"import { MAXIMUM_RETRY_DELAY } from \"./constants\";\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nexport const defaultDelayDecider = (delayBase: number, attempts: number) =>\n  Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n"},"lineCount":null}},"error":null,"hash":"992b24fee13809a9518775cfa51f6f7b","cacheData":{"env":{}}}